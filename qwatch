#!/usr/bin/env python2.7
"""Monitor the jobs submitted to the Sun Grid Engine (SGE).

Returns some statistics for the SGE command 'qstat': the number of queued
and running jobs, as well as the total number of submitted jobs.

usage: qwatch [-h] [-n N] [-l L]

optional arguments:
  -h, --help  show this help message and exit
  -n N        update interval (seconds)
  -l L        number of lines to print in the qstat summary
"""

import os
import re
import subprocess
import sys

import argparse
import time


# get $USER
USER = os.getlogin()
# column in qstat output to read status from
STATUS_COLUMN = 4
# column in qstat output to read job-array status from
JA_COLUMN = 8

# get command-line arguments
parser = argparse.ArgumentParser()
parser.add_argument('-n', type=float, default=5,
                    help='update interval (seconds)')
parser.add_argument('-l', type=int, default=40,
                    help='number of lines to print in the qstat summary')
args = vars(parser.parse_args())

# process qstat
while True:
    try:
        subprocess.call(['clear'])

        # get qstat output
        qstat = subprocess.check_output(['qstat'])

        # filter relevant lines of qstat
        qstat_lines = [ line.split() for line in
                        qstat.splitlines() if USER in line ]

        # get number of running/queued jobs
        njobs = dict()

        # initialize job count for running (r), queued (qw) jobs and
        # jobarrays (ja)
        for status in "r", "qw", "ja":
            njobs[status] = 0

        regex = re.compile("[-:]")
        for col in qstat_lines:
            if col[STATUS_COLUMN] == "r":
                njobs["r"] += 1
            if col[STATUS_COLUMN] == "qw":
                try:
                    if ":" not in col[JA_COLUMN]:
                        njobs["qw"] += 1
                    else:
                        ja_range = map(int, regex.split(col[-1]))
                        njobs["ja"] += len(range(*ja_range)) + 1
                except IndexError:
                    njobs["ja"] += 0

        # calculate totals
        njobs["total"] = njobs.get("r") + njobs.get("qw") + njobs.get("ja")
        njobs["qw_total"] = njobs.get("qw") + njobs.get("ja")

        # get current timestamp
        date = time.strftime("%a %b %d %H:%M:%S %Z %Y")
        print date

        print """
            SGE summary:
            ============
                Total number of submitted jobs: {total}
                Total number of running jobs:   {r}
                Total number of queued jobs:    {qw_total}

        """.format(**njobs)

        # mimick the bash-builtin 'head'
        NLINES = args.get('l')
        for line in qstat.splitlines()[:NLINES]:
            print line

        time.sleep(args.get('n'))
    except KeyboardInterrupt:
        sys.exit()
